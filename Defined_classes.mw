At the 2007 summer workshop it was decided to allow defined classes in OBI, for two principal reasons

# To allow the definitions of terms that were in use by the community but were not "universals" as determined by the group.
# To facilitate organization of OBI as a single asserted hierarchy while allowing for polyhierarchy where appropriate.

The first case is the stronger. The second needs further justification in the form of plausible use cases and should be reviewed one we have some.

An action item was to come up with a mechanism of handling these defined classes in day to day development of the ontology - where to put them, how to mark them, what are policies related to them?

This page is a draft of those policies.

* All defined classes are classes have necessary and sufficient conditions - In an OWL file, this means that they are "complete" or are are defined by an equivalentClasses statement. 

* It is uncertain whether the converse is true, that all classes with neccessary and sufficient conditions are are defined classes. Therefore defined classes should be marked as such. Absent a way to create a metaclass in OWL, we will used an annotation property: obi:defined_class asserted on defined classes. The value of this property will be the reason that the class was created as a defined class. Two values are currently proposed: "normalization", to indicate that the classes was defined for reason 2 above, and "requested_term" to indicated reason 1 above. Additional comments regarding the choice to use a defined class should be placed in the editor note. All other metadata for a class is relevent for defined classes.

* The definition of a defined classes does not necessarily follow the usual Aristotelian definition form, but should when appropriate. The definition should indicate that the class is defined. Proposal: wording such as "Individuals in the class foo are defined to be ...". 

* All defined classes have logical definitions.

* Any class that is not a defined class is intended to be a universal.

* Defined classes should have a single expression indicating the necessary and sufficient conditions and should have no additional necessary conditions.

* In visual ontology editors such as protege, one must define a class as a subclass of some existing class. Tools may not have appropriate support for the visual organization of defined classes, and may partially evaluate the consequences of the logical definition when placing the term in the class hierarchy. As an initial practice, we will add terms that naturally fall under a branch to be a subclass of the branch top level, and those that do not as a subclass of Entity.

* It is an open question as to under what situations, if any,  we should ''assert''  that some class is a subclass of  a defined class. Intuitively it would seem that universals should not be subclasses of defined classes.

* A defined class should not be asserted to be disjoint from another. If they are disjoint from other classes it should be as a consequence of their definition.

Questions: 
* Should we have separate files for defined classes?
* Should we accomodate Protege's UI and create junk classes so that defined classes can be put in a "folder".
* Are there motivations for defined classes other than the two listed?
* In order that we are conformant to open world semantics, should we script the addition of an annotation property to indicate a class is a universal? An alternative to the  defined_class property would be to use, instead, a "class_type" property, with values: "defined_term" "defined_for_normalization", "universal" to indicate the three choices.

TBD: Examples.

Author: Alan Ruttenberg
