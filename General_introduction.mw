'''This document is under construction.'''

author: [[User:Dirk Derom|Dirk Derom]]

This document will guide you through the maze of OBI. It's intended for those not familiar with OBI and aims to be an easy read document giving you all the minimum information for a quick understanding of OBI.



== OBI: short & simple ==

'''What?'''<br>
<br>
OBI is a [http://en.wikipedia.org/wiki/Ontology Ontology] for the description of biological and clinical investigations using [http://www.ifomis.org/bfo BFO] as its [http://en.wikipedia.org/wiki/Upper_ontology upper-ontology].
* An [http://en.wikipedia.org/wiki/Ontology Ontology] captures the concepts used within a specific domain along with its relations for those concepts. It's a controlled (usually community driven) effort to create a shared vacabulary for the specific domain.
* BFO is an [http://en.wikipedia.org/wiki/Upper_ontology upper-ontology], which describes the very general concepts of scientific research where various domain ontologies can reside.
* OBI is such a domain specific ontology (cf. a more 'specific' ontology focussed on a specific domain), using BFO as its framework (cf. using the more general concepts) targeting biological and clinical investigations. 

'''Scope?'''<br>
<br>
The ontology will represent the design of an investigation, the protocols and instrumentation used, the material used, the data generated and the type analysis performed on it. Its primary goals are:
* to develop ontology for Biomedical Investigations in collaboration with groups representing different biological and technological domains involved in Biomedical Investigations 
* to make OBI compatible with other bio-ontologies
* to develop of OBI using an open source approach
* to create a valuable resource for the biomedical communities to provide a source of terms for consistent annotation of investigations

'''Who?'''<br>
<br>
OBI is being [[#Consortium|developed by]] individuals from different biological and technological domains involved in Biomedical Investigations.

== OBI ==

The Ontology for Biomedical Investigations (OBI) addresses the need for controlled vocabularies to stimulate the integration of experimental data. OBI captures representation of designs, protocols, instrumentation, materials, processes, data and types of analysis in all areas of biological and biomedical investigations. 

The need for data integration was originally identified in the transcriptomics domain by the Microarray Gene Expression Data Society (MGED), which developed the MGED Ontology as an annotation resource for microarray data. Following a mutual decision to collaborate, this effort later became a wider collaboration between groups such as MGED, PSI and MSI in response to the needs of areas such as transcriptomics, proteomics and metabolomics and the FuGO (Functional Genomics Investigation Ontology) was created. FUGO was later on extended with clinical and epidemiological research and biomedical imaging (=OBI). This later become OBI covering the wider scope of all biomedical investigations.

=== The Scope of OBI ===

The Ontology for Biomedical Investigations (OBI) project is developing an integrated ontology for the description of biological and clinical investigations. This ontology will support the consistent annotation of biomedical investigations, regardless of the particular field of study. This leads to the formulation of the following goals:
* Develop an Ontology for Biomedical Investigations in collaboration with groups representing different biological and technological domains involved in Biomedical Investigations
* Make OBI compatible with other bio-ontologies
* Develop OBI using an open source approach
* Create a valuable resource for the biomedical communities to provide a source of terms for consistent annotation of investigations 

The ontology has the scope of modeling all biomedical investigations and as such contains ontology terms for aspects such as:
* biological material - for example blood plasma
* instrument (and parts of an instrument therein) - for example DNA microarray, centrifuge
* information content - such as an image or a digital information entity such as an electronic medical record
* design and execution of an investigation (and individual experiments therein) - for example study design, electrophoresis material separaition
* data transformation (incorporating aspects such as data normalization and data analysis) - for example principal components analysis dimensionality reduction, mean calculation

Less 'concrete' aspects such as the role a given entity may play in a particular scenario (for example the role of a chemical compound in an experiment) and the function of an entity (for example the digestive function of the stomach to nutriate the body) are also covered in the ontology.


=== BFO vs. IAO vs OBI ===


=== The OBI Consortium ===

As an international, cross-domain initiative, the OBI consortium draws upon a pool of experts from a variety of fields, not limited to biology. The current list of OBI consortium members is available at the OBI consortium website. The consortium is made up of a coordinating committee which is a combination of two subgroups, the Community Representative (those representing a particular biomedical community) and the Core Developers (ontology developers who may or may not be members of any single community). Separate to the coordinating committee is the Developers Working Group which consists of developers within the communities collaborating in the development of OBI at the discretion of current OBI Consortium members.


=== Branches and Coordinators ===

OBI uses the Basic Formal Ontology upper level ontology as a means of describing general entities that do not belong to a specific problem domain. As such, all OBI classes are a subclass of some BFO class.


=== Organization Chart ===

The OBI project is an international, collaborative effort to build an ontology to be used for annotation of Biomedical Investigations. The OBI Consortium is the name under which the OBI project authors its work.

<graphviz>
Digraph {

/* Node styles */
	node [shape = square];
	{node [color = grey, style = dashed];
		"Upper-Level Ontology";
		"Domain Specific Ontology";
	}

	{ node [color =grey]
		"NeuroCommons";
	}

	{ node [shape = plaintext]
		"...";
	}

/* Subs */
	/* Comments */
		Subgraph cluster_comments {
			"Upper-Level Ontology";
			"Domain Specific Ontology";
		
		color = white;
			
		}

/* Relations */
	BFO -> OBI;
	BFO -> "OBO Foundry";
	
	"OBO Foundry" -> OBI;
	"OBO Foundry" -> "NeuroCommons" [color = grey];
	"OBO Foundry" -> "..." [color = grey];
	
	OBI -> Branches;
	
	"Upper-Level Ontology" -> BFO [style = dashed, color = grey];
	"Domain Specific Ontology" -> OBI [style = dashed, color = grey];
	
}
</graphviz>

== Contributing to OBI ==
==== The Developers ====

* Community Representatives
* Core Developers
* Developers Working Group

==== Quick Terms ====

==== Contribute ====
We have  mailing lists for both users and developers. Join the users list to be notified of each OBI release. If you represent a Community that would like to collaborate in the development of OBI, contact the Coordination Committee.

== Using OBI ==

=== SVN ===

* Structure of SVN - there are 4 projects set-up, each with their own trunk, branches and tags directory: web, ontology, and tools.
** web - location for web related files, e.g. the OBI homepage
** branchDevelopment - location for the branch owl files that are currently being worked on
** ontology - location for release-ready .owl, .pprj and other files
** tools - any application code that is of use for the project that is NOT available at another location. The autoid plugin to use with Protege is stored here as this was pointed to us from the Protege list and the code subsequently modified by Gilberto Fragoso.

* see current [http://obi.svn.sourceforge.net/viewvc/obi/branchDevelopment/trunk/instructions-svn-local.txt?view=markup README] in the SVN project

==== Powerpoint presentation ====

Powerpoint Presentation on Subversion for OBI [[Image:SubversionObi.ppt]] : given 21 November 2007 by Allyson, Daniel S., and Melanie at the obi-dev Telecon.

==== How to install and set up your local svn repository ====


First, read this svn section under
http://sourceforge.net/docs/B01/en/#

SVN (Subversion) is a tool used by many software developers to manage changes within their source code tree. SVN provides the means to store not only the current version of a piece of source code, but a record of all changes (and who made those changes) that have occurred to that source code. Use of SVN is particularly common on projects with multiple developers, since SVN ensures changes made by one developer are not accidentally removed when another developer posts their changes to the source tree.

In order to access a Subversion repository, you must install a Subversion clientfor your operating system.

On windows, please download and install the TortoiseSVN client from
http://tortoisesvn.net/downloads

After this configurate the SVN client as described here:
http://sourceforge.net/docs/F07/en/#config
and here
http://sourceforge.net/svn/?group_id=177891

but use the following obi parameter:
URL:  https://obi.svn.sourceforge.net/svnroot/obi

Then you can create a new folder where you want all the svn stuff to be put by the svn-'checkout'. right click on the new folder and select svn-checkout.
You will be asked to do some settings and then you connect to the SF svn address and download (checkout) the present directory structure and files into your specified client-based folder.
Later you will update this folder or files via 'svn update' before you commit your changes back to the common repository. You can use the repro browser (again for tortoise svn client all the options are available via rightclick on your checkout folder or specific files) to just have a look what's in svn without actually downloading/updating anything in your local folder.

How to use svn is described here:
http://sourceforge.net/docs/E09/en/#top

==== How to Use SVN ====

* command line based (UNIX/MAC):
[http://svnbook.red-bean.com/en/1.4/svn.tour.cycle.html online tutorial for SVN]

* windows Explorer plugin-based (PC):
[http://www.shokhirev.com/nikolai/programs/SVN/svn.html using tortoise svn]

to summarize:

- when you want to commit your changes, ALWAYS do '''svn update''' first (svn status -u can also predict conflicts)

If the svn update shows no conflict ("C" in front of the file name) then go ahead and '''svn commit'''

If the svn show conflicts:

	- svn will create additional files in your working repository:

			- ''filename.mine'': This is your file as it existed in your working copy before you updated your working copy—that is, without conflict markers. This file has only your latest changes in it. (If Subversion considers the file to be unmergeable, then the .mine file isn't created, since it would be identical to the working file.)

			- ''filename.rOLDREV'': This is the file that was the BASE revision before you updated your working copy. That is, the file that you checked out before you made your latest edits.

			- ''filename.rNEWREV'': This is the file that your Subversion client just received from the server when you updated your working copy. This file corresponds to the HEAD revision of the repository.

	- at this point you can't commit into svn (as long as these 3 files exists)

=> YOU NEED TO SOLVE THE CONFLICT FIRST

		- you can decide to throw away your changes: '''svn revert''' or copy one of the temporary svn file over your copy

		- you can merge the conflicts by hand (lines identified by ========= and >>>>> and <<<<<<<<)

Once the conflict is solved, run '''svn resolved''' to tell svn that you're now ok. NOTE: svn will trust you, and will not check that you actually solved the conflicts. At this point the .mine, .rOLDREV and .rNEWREV are deleted.

	- you can now '''svn commit''' your files


Please check the [http://obi.svn.sourceforge.net/viewvc/obi/branchDevelopment/trunk/instructions-svn-local.txt?view=markup README] in the SVN project for the lock option


* USEFUL COMMAND
You can check using diff between a given revision (for instance the last one committed) and your local working copy - e.g.:<br>

svn diff -r 470 Biomaterial.owl<br>

The above compares the revision 470 of the file Biomaterial.owl to your local copy.<br>

svn diff -r 470 Biomaterial.owl > test.diff.001<br>


The above compares the revision 470 of the file Biomaterial.owl to your local copy and write the result in a local file in your copy called test.diff.001.<br>
(Thanks to Bill for the tip!)<br>



* Unix/Mac  - command-line or embedded GUI wrapper in Eclipse or Netbeans
* PC - Tortoise Client

[[category:OBI general]]
